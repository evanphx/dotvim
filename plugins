"  vim: filetype=vim
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"""
""" Ben Bleything's Vim Setup
""" Based on the work of many others. See README.rdoc for credits.
"""
""" Git Hubs: http://github.com/bleything/dotvim
""" Internet Electronic Mail: ben@bleything.net
"""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""" P L U G I N   O P T I O N S
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""" a
let g:alternateNoDefaultAlternate = 1

let g:ackprg="ack"

""" bufexplorer
" let g:bufExplorerDetailedHelp=1     " show full help text by default
let g:bufExplorerShowRelativePath=1 " use relative paths
" let g:bufExplorerShowUnlisted=1     " display unlisted buffers

" let ruby_no_expensive = 1

" replace the normal word movement keys with smart versions
map <silent> w <Plug>CamelCaseMotion_w
map <silent> b <Plug>CamelCaseMotion_b
map <silent> e <Plug>CamelCaseMotion_e

""" NERDCommenter
let NERDCreateDefaultMappings=0 " disable default mappings
let NERDMenuMode=0              " disable menu
let NERDSpaceDelims=1           " place spaces after comment chars
let NERDDefaultNesting=0        " don't recomment commented lines


map <leader>cc <plug>NERDCommenterToggle
map <leader>cC <plug>NERDCommenterSexy
map <leader>cu <plug>NERDCommenterUncomment

""" NERDTree
map <leader>d :NERDTreeToggle<cr>

""" Tabular
" sets ,a to align = and => lines
map <leader>a :Tabularize /=>\?<cr>

""" Taglist
map <leader>t :TlistToggle<cr>

set omnifunc=syntaxcomplete#Complete

let g:SuperTabDefaultCompletionType = "context"
let g:SuperTabClosePreviewOnPopupClose = 1

" autocmd BufWritePre *.go Fmt

let g:go_snippet_engine = "neosnippet"

""" Unite

let g:unite_data_directory='~/.vim/.cache/unite'
let g:unite_enable_start_insert=1
let g:unite_source_history_yank_enable=1
let g:unite_source_rec_max_cache_files=5000
let g:unite_prompt='Â» '

let g:unite_source_grep_command='pt'
let g:unite_source_grep_default_opts='--nocolor --nogroup -S -C4'
let g:unite_source_grep_recursive_opt=''

" function! s:unite_settings()
  " nmap <buffer> Q <plug>(unite_exit)
  " nmap <buffer> <esc> <plug>(unite_exit)
  " imap <buffer> <esc> <plug>(unite_exit)
" endfunction
" autocmd FileType unite call s:unite_settings()

" nmap <space> [unite]
" nnoremap [unite] <nop>

" nnoremap <silent> [unite]<space> :<C-u>Unite -toggle -auto-resize -buffer-name=mixed file_rec/async:! buffer file_mru bookmark<cr><c-u>
" nnoremap <silent> [unite]f :<C-u>Unite -toggle -auto-resize -buffer-name=files file_rec/async:!<cr><c-u>
" nnoremap <silent> [unite]e :<C-u>Unite -buffer-name=recent file_mru<cr>
" nnoremap <silent> [unite]y :<C-u>Unite -buffer-name=yanks history/yank<cr>
" nnoremap <silent> [unite]l :<C-u>Unite -auto-resize -buffer-name=line line<cr>
" nnoremap <silent> [unite]b :<C-u>Unite -auto-resize -buffer-name=buffers buffer<cr>
" nnoremap <silent> [unite]/ :<C-u>Unite -no-quit -buffer-name=search grep:.<cr>
" nnoremap <silent> [unite]m :<C-u>Unite -auto-resize -buffer-name=mappings mapping<cr>
" nnoremap <silent> [unite]s :<C-u>Unite -quick-match buffer<cr>


